{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/project/pre_project/client/src/components/Layout/Search/index.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport { GoSearch } from \"react-icons/go\";\nimport styled from \"styled-components\";\nimport { useDispatch } from \"react-redux\";\nimport { searchTagAction } from \"../../../redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div``;\n_c = Container;\nconst SearchContainer = styled.div``;\n_c2 = SearchContainer;\nconst Input = styled.input``;\n_c3 = Input;\nfunction Search() {\n  _s();\n  const [searchValue, setSearchValue] = useState(\"\");\n  //const dispatch = useDispatch();\n  const [isOpen, setIsOpen] = useState(false);\n  const handleOnClick = () => {\n    setIsOpen(!isOpen);\n    //input창을 클릭할때 마다 isOpen이\n    //false => true or  true => false 로 바뀜\n  };\n\n  const modalRef = useRef();\n  //html요소 돔(input)을 직접 제어하기 위해 쓰는 hook\n\n  const clickModalOutside = event => {\n    console.log(event.target);\n    if (isOpen && (!modalRef.current || !modalRef.current.contains(event.target))\n    //!modalRef.current : input 요소가 아닐때\n    //Node.contains():주어진 인자가 node 의 자손인지, 아닌지에 대한 Boolean 값을 리턴\n    ) {\n      setIsOpen(false);\n    }\n  };\n  useEffect(() => {\n    window.addEventListener(\"mousedown\", clickModalOutside);\n    //mousedown: 마우스 버튼을 눌렀을 때 발생\n  });\n\n  const onChangeValue = e => {\n    setSearchValue(e.target.value);\n    // console.log(e.target.value);\n    //imput안에 입력한 내용\n  };\n\n  const handleEnter = e => {\n    console.log(e);\n    if (e.key === \"Enter\" && searchValue.includes(\"[\") && searchValue.includes(\"]\")) {\n      //디스패치 써야함\n\n      setIsOpen(false);\n      //여기서 tag검색 페이지로 가야함\n    } else if (e.key === \"Enter\" && !searchValue.includes(\"[\") && searchValue.length > 0) {\n      //디스패치 써야함\n\n      //여기서 검색창으로 가야함\n      setIsOpen(false);\n    } else if (searchValue.length === 0) {\n      return;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(SearchContainer, {\n      children: [/*#__PURE__*/_jsxDEV(GoSearch, {\n        color: \"#838C95\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"search\",\n        placeholder: \"Search...\",\n        onChange: onChangeValue,\n        onKeyPress: handleEnter,\n        onClick: handleOnClick,\n        ref: modalRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(Search, \"laa58JRtDQLVHkZkiFFK5kvrNlc=\");\n_c4 = Search;\nexport default Search;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"SearchContainer\");\n$RefreshReg$(_c3, \"Input\");\n$RefreshReg$(_c4, \"Search\");","map":{"version":3,"names":["useEffect","useRef","useState","GoSearch","styled","useDispatch","searchTagAction","Container","div","SearchContainer","Input","input","Search","searchValue","setSearchValue","isOpen","setIsOpen","handleOnClick","modalRef","clickModalOutside","event","console","log","target","current","contains","window","addEventListener","onChangeValue","e","value","handleEnter","key","includes","length"],"sources":["/Users/macbook/Desktop/project/pre_project/client/src/components/Layout/Search/index.js"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport { GoSearch } from \"react-icons/go\";\nimport styled from \"styled-components\";\nimport { useDispatch } from \"react-redux\";\nimport { searchTagAction } from \"../../../redux\";\n\nconst Container = styled.div``;\n\nconst SearchContainer = styled.div``;\n\nconst Input = styled.input``;\n\nfunction Search() {\n  const [searchValue, setSearchValue] = useState(\"\");\n  //const dispatch = useDispatch();\n  const [isOpen, setIsOpen] = useState(false);\n  const handleOnClick = () => {\n    setIsOpen(!isOpen);\n    //input창을 클릭할때 마다 isOpen이\n    //false => true or  true => false 로 바뀜\n  };\n\n  const modalRef = useRef();\n  //html요소 돔(input)을 직접 제어하기 위해 쓰는 hook\n\n  const clickModalOutside = (event) => {\n    console.log(event.target);\n    if (\n      isOpen &&\n      (!modalRef.current || !modalRef.current.contains(event.target))\n      //!modalRef.current : input 요소가 아닐때\n      //Node.contains():주어진 인자가 node 의 자손인지, 아닌지에 대한 Boolean 값을 리턴\n    ) {\n      setIsOpen(false);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"mousedown\", clickModalOutside);\n    //mousedown: 마우스 버튼을 눌렀을 때 발생\n  });\n\n  const onChangeValue = (e) => {\n    setSearchValue(e.target.value);\n    // console.log(e.target.value);\n    //imput안에 입력한 내용\n  };\n  const handleEnter = (e) => {\n    console.log(e);\n    if (\n      e.key === \"Enter\" &&\n      searchValue.includes(\"[\") &&\n      searchValue.includes(\"]\")\n    ) {\n      //디스패치 써야함\n\n      setIsOpen(false);\n      //여기서 tag검색 페이지로 가야함\n    } else if (\n      e.key === \"Enter\" &&\n      !searchValue.includes(\"[\") &&\n      searchValue.length > 0\n    ) {\n      //디스패치 써야함\n\n      //여기서 검색창으로 가야함\n      setIsOpen(false);\n    } else if (searchValue.length === 0) {\n      return;\n    }\n  };\n\n  return (\n    <Container>\n      <SearchContainer>\n        <GoSearch color=\"#838C95\" />\n        <Input\n          type=\"search\"\n          placeholder=\"Search...\"\n          onChange={onChangeValue}\n          onKeyPress={handleEnter}\n          onClick={handleOnClick}\n          ref={modalRef}\n        />\n      </SearchContainer>\n      {/* \n     {isOpen ? <서치모달창/> : null} \n      isOpen(검색창 클릭할때 true가 되고 모달창이 열림)\n     */}\n    </Container>\n  );\n}\n\nexport default Search;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACnD,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,eAAe,QAAQ,gBAAgB;AAAC;AAEjD,MAAMC,SAAS,GAAGH,MAAM,CAACI,GAAI,EAAC;AAAC,KAAzBD,SAAS;AAEf,MAAME,eAAe,GAAGL,MAAM,CAACI,GAAI,EAAC;AAAC,MAA/BC,eAAe;AAErB,MAAMC,KAAK,GAAGN,MAAM,CAACO,KAAM,EAAC;AAAC,MAAvBD,KAAK;AAEX,SAASE,MAAM,GAAG;EAAA;EAChB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAClD;EACA,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAMe,aAAa,GAAG,MAAM;IAC1BD,SAAS,CAAC,CAACD,MAAM,CAAC;IAClB;IACA;EACF,CAAC;;EAED,MAAMG,QAAQ,GAAGjB,MAAM,EAAE;EACzB;;EAEA,MAAMkB,iBAAiB,GAAIC,KAAK,IAAK;IACnCC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,MAAM,CAAC;IACzB,IACER,MAAM,KACL,CAACG,QAAQ,CAACM,OAAO,IAAI,CAACN,QAAQ,CAACM,OAAO,CAACC,QAAQ,CAACL,KAAK,CAACG,MAAM,CAAC;IAC9D;IACA;IAAA,EACA;MACAP,SAAS,CAAC,KAAK,CAAC;IAClB;EACF,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACd0B,MAAM,CAACC,gBAAgB,CAAC,WAAW,EAAER,iBAAiB,CAAC;IACvD;EACF,CAAC,CAAC;;EAEF,MAAMS,aAAa,GAAIC,CAAC,IAAK;IAC3Bf,cAAc,CAACe,CAAC,CAACN,MAAM,CAACO,KAAK,CAAC;IAC9B;IACA;EACF,CAAC;;EACD,MAAMC,WAAW,GAAIF,CAAC,IAAK;IACzBR,OAAO,CAACC,GAAG,CAACO,CAAC,CAAC;IACd,IACEA,CAAC,CAACG,GAAG,KAAK,OAAO,IACjBnB,WAAW,CAACoB,QAAQ,CAAC,GAAG,CAAC,IACzBpB,WAAW,CAACoB,QAAQ,CAAC,GAAG,CAAC,EACzB;MACA;;MAEAjB,SAAS,CAAC,KAAK,CAAC;MAChB;IACF,CAAC,MAAM,IACLa,CAAC,CAACG,GAAG,KAAK,OAAO,IACjB,CAACnB,WAAW,CAACoB,QAAQ,CAAC,GAAG,CAAC,IAC1BpB,WAAW,CAACqB,MAAM,GAAG,CAAC,EACtB;MACA;;MAEA;MACAlB,SAAS,CAAC,KAAK,CAAC;IAClB,CAAC,MAAM,IAAIH,WAAW,CAACqB,MAAM,KAAK,CAAC,EAAE;MACnC;IACF;EACF,CAAC;EAED,oBACE,QAAC,SAAS;IAAA,uBACR,QAAC,eAAe;MAAA,wBACd,QAAC,QAAQ;QAAC,KAAK,EAAC;MAAS;QAAA;QAAA;QAAA;MAAA,QAAG,eAC5B,QAAC,KAAK;QACJ,IAAI,EAAC,QAAQ;QACb,WAAW,EAAC,WAAW;QACvB,QAAQ,EAAEN,aAAc;QACxB,UAAU,EAAEG,WAAY;QACxB,OAAO,EAAEd,aAAc;QACvB,GAAG,EAAEC;MAAS;QAAA;QAAA;QAAA;MAAA,QACd;IAAA;MAAA;MAAA;MAAA;IAAA;EACc;IAAA;IAAA;IAAA;EAAA,QAKR;AAEhB;AAAC,GA/EQN,MAAM;AAAA,MAANA,MAAM;AAiFf,eAAeA,MAAM;AAAC;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}