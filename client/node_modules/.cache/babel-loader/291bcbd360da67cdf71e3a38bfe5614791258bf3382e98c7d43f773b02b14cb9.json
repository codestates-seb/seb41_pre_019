{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/project/pre_project/client/src/components/Layout/Search/index.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport { GoSearch } from \"react-icons/go\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { searchGenAction, searchTagAction } from \"../../../redux\";\nimport SearchModal from \"../../SearchModal\";\nimport { Container, Input, SearchContainer } from \"./style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Search() {\n  _s();\n  const [searchValue, setSearchValue] = useState(\"\");\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [isOpen, setIsOpen] = useState(false);\n  const handleOnClick = () => {\n    setIsOpen(!isOpen);\n  };\n  const modalRef = useRef();\n  const clickModalOutside = event => {\n    if (isOpen && (!modalRef.current || !modalRef.current.contains(event.target))) {\n      setIsOpen(false);\n    }\n  };\n  useEffect(() => {\n    window.addEventListener(\"mousedown\", clickModalOutside);\n    return () => {\n      window.removeEventListener(\"mousedown\", clickModalOutside);\n    };\n  });\n  const onChangeValue = e => {\n    setSearchValue(e.target.value);\n  };\n  const handleEnter = e => {\n    if (e.key === \"Enter\" && searchValue.includes(\"[\") && searchValue.includes(\"]\")) {\n      dispatch(searchTagAction(searchValue.slice(1, searchValue.length - 1)));\n      setIsOpen(false);\n      navigate(\"/searchtag\");\n    } else if (e.key === \"Enter\" && !searchValue.includes(\"[\") && searchValue.length > 0) {\n      dispatch(searchGenAction(searchValue));\n      navigate(\"/search\");\n      setIsOpen(false);\n    } else if (searchValue.length === 0) {\n      return;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(SearchContainer, {\n      children: [/*#__PURE__*/_jsxDEV(GoSearch, {\n        color: \"#838C95\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"search\",\n        placeholder: \"Search...\",\n        onChange: onChangeValue,\n        onKeyPress: handleEnter,\n        onClick: handleOnClick,\n        ref: modalRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), isOpen ? /*#__PURE__*/_jsxDEV(SearchModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(Search, \"oEKK/O6uTg1yzgYA4xwXwXahlgg=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["useEffect","useRef","useState","GoSearch","useDispatch","useNavigate","searchGenAction","searchTagAction","SearchModal","Container","Input","SearchContainer","Search","searchValue","setSearchValue","navigate","dispatch","isOpen","setIsOpen","handleOnClick","modalRef","clickModalOutside","event","current","contains","target","window","addEventListener","removeEventListener","onChangeValue","e","value","handleEnter","key","includes","slice","length"],"sources":["/Users/macbook/Desktop/project/pre_project/client/src/components/Layout/Search/index.js"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport { GoSearch } from \"react-icons/go\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { searchGenAction, searchTagAction } from \"../../../redux\";\nimport SearchModal from \"../../SearchModal\";\nimport { Container, Input, SearchContainer } from \"./style\";\n\nfunction Search() {\n  const [searchValue, setSearchValue] = useState(\"\");\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [isOpen, setIsOpen] = useState(false);\n  const handleOnClick = () => {\n    setIsOpen(!isOpen);\n  };\n  const modalRef = useRef();\n\n  const clickModalOutside = (event) => {\n    if (\n      isOpen &&\n      (!modalRef.current || !modalRef.current.contains(event.target))\n    ) {\n      setIsOpen(false);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"mousedown\", clickModalOutside);\n\n    return () => {\n      window.removeEventListener(\"mousedown\", clickModalOutside);\n    };\n  });\n\n  const onChangeValue = (e) => {\n    setSearchValue(e.target.value);\n  };\n\n  const handleEnter = (e) => {\n    if (\n      e.key === \"Enter\" &&\n      searchValue.includes(\"[\") &&\n      searchValue.includes(\"]\")\n    ) {\n      dispatch(searchTagAction(searchValue.slice(1, searchValue.length - 1)));\n\n      setIsOpen(false);\n      navigate(\"/searchtag\");\n    } else if (\n      e.key === \"Enter\" &&\n      !searchValue.includes(\"[\") &&\n      searchValue.length > 0\n    ) {\n      dispatch(searchGenAction(searchValue));\n\n      navigate(\"/search\");\n      setIsOpen(false);\n    } else if (searchValue.length === 0) {\n      return;\n    }\n  };\n\n  return (\n    <Container>\n      <SearchContainer>\n        <GoSearch color=\"#838C95\" />\n        <Input\n          type=\"search\"\n          placeholder=\"Search...\"\n          onChange={onChangeValue}\n          onKeyPress={handleEnter}\n          onClick={handleOnClick}\n          ref={modalRef}\n        />\n      </SearchContainer>\n      {isOpen ? <SearchModal /> : null}\n    </Container>\n  );\n}\n\nexport default Search;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}